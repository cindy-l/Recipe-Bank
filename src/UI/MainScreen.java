/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;


import java.awt.event.KeyEvent;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import java.sql.*;


/**
 *
 * @author cindy
 */
public class MainScreen extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    Connection con;
    DefaultListModel mod = new DefaultListModel();

    public MainScreen(){
        
    }
    public MainScreen(Connection connection) {
        initComponents();
        con = connection;
        recipeList.setModel(mod);

        try{
            createTable();
            con.setAutoCommit(false);
        }catch(SQLException e){
            System.out.println("SQLException thrown when trying to create table! Message: " + e.getMessage());
            try{
                con.close();
            }catch(SQLException se){
                System.out.println("Exception found when trying to close connection!Message: " + se.getMessage());
                
            }
            System.exit(-1);
        }
    }
   
    private void createTable() throws SQLException {
        DatabaseMetaData data = con.getMetaData();
        ResultSet rs = data.getTables(null, null, "RECIPE", null);
        PreparedStatement ps;

        if (rs.next()){
            //table exists, load the recipe into the list and map
            ps = con.prepareStatement("SELECT * FROM Recipe");
            ResultSet recipeSet = ps.executeQuery();
            while(recipeSet.next()){
                String recipeName = recipeSet.getString("id");
                mod.addElement(recipeName);
            }
        }else{
            ps = con.prepareStatement("CREATE TABLE Recipe (id VARCHAR(2000) PRIMARY KEY, info VARCHAR(500))");
            ps.executeUpdate();
            System.out.println("Created recipe table in given database");
        }
        con.commit();
        ps.close();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jEditorPane2 = new javax.swing.JEditorPane();
        jTextField1 = new javax.swing.JTextField();
        DeleteButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        recipeList = new javax.swing.JList<>();
        AddButton1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        EditButton = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        searchResultsField = new javax.swing.JTextArea();

        jScrollPane3.setViewportView(jEditorPane2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jTextField1.setText("Recipe Repertoire");

        DeleteButton.setBackground(new java.awt.Color(255, 0, 51));
        DeleteButton.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        recipeList.setToolTipText("");
        recipeList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recipeListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(recipeList);

        AddButton1.setBackground(new java.awt.Color(255, 0, 51));
        AddButton1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        AddButton1.setText("+");
        AddButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        EditButton.setBackground(new java.awt.Color(255, 0, 51));
        EditButton.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        EditButton.setText("Edit");
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });

        searchField.setText("Search...");
        searchField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchFieldFocusLost(evt);
            }
        });
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchFieldKeyPressed(evt);
            }
        });

        searchResultsField.setColumns(20);
        searchResultsField.setRows(5);
        jScrollPane2.setViewportView(searchResultsField);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(searchField, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AddButton1)
                .addGap(56, 56, 56)
                .addComponent(EditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DeleteButton)
                    .addComponent(EditButton)
                    .addComponent(AddButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        DeleteButton.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButton1ActionPerformed
      createAddFrame();
    }//GEN-LAST:event_AddButton1ActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        int response = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to delete?");
        if (response == JOptionPane.YES_OPTION){
            int index = recipeList.getSelectedIndex();
            String name = recipeList.getSelectedValue();
            if (index >= 0){
                mod.removeElementAt(index);
                deleteBranch(name);
                jTextArea1.setText("");
            }else{
               JOptionPane.showMessageDialog(rootPane,"Please select item from list to delete"); 
            }
        }
    }//GEN-LAST:event_DeleteButtonActionPerformed
    protected void deleteBranch(String name){
        if (mod.contains(name)){
            mod.removeElement(name);
        }
        PreparedStatement ps;
        System.out.println("recipe name is: " + name);
        try{
            ps = con.prepareStatement("DELETE FROM Recipe WHERE id=?");
            System.out.println("Deleting recipe from table");
            ps.setString(1, name);
            int rowCount = ps.executeUpdate();
            System.out.println("number of rows updated is: " + rowCount);
            con.commit();
            ps.close();
        }catch(SQLException e){
            System.out.println("SQLException caught when deleting a branch. Message: " + e.getMessage());
            try{
                con.rollback();
            }catch(SQLException e2){
                System.out.println("Message: " + e2.getMessage());
                System.exit(-1);
            }
        }
    }
    private void recipeListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recipeListMouseClicked
        if (recipeList.getSelectedIndex() >=0 ){
            PreparedStatement ps;
            try{
                ps = con.prepareStatement("SELECT info FROM Recipe WHERE id = ?");
                ps.setString(1, recipeList.getSelectedValue());
                ResultSet rs = ps.executeQuery();
                while (rs.next())
                    jTextArea1.setText(rs.getString("info"));
            }catch(SQLException e){
                System.out.println("Message is: " + e.getMessage());
            }
            
        }
    }//GEN-LAST:event_recipeListMouseClicked

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
       if (recipeList.getSelectedIndex() >= 0 ){
            createEditFrame(recipeList.getSelectedValue());
       }
    }//GEN-LAST:event_EditButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       //when window close, close connection too
       try{
        con.commit();
        con.close();
       }catch(SQLException e){
           System.out.println("Cannot close connection. Message: " + e.getMessage());
       }
    }//GEN-LAST:event_formWindowClosing

    private void searchFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFieldFocusLost
       if (searchField.getText().replaceAll("\\s+", "").equals ("")){
            searchField.setText("Search...");
       }
    }//GEN-LAST:event_searchFieldFocusLost

    private void searchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER){
           search(searchField.getText());
       }
    }//GEN-LAST:event_searchFieldKeyPressed

    private void searchFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFieldFocusGained
        if (searchField.getText().equals("Search...")){
            searchField.setText("");
        }
    }//GEN-LAST:event_searchFieldFocusGained
    
    protected void addRecipe(String recipeName, String recipeInfo){
        PreparedStatement ps;
        mod.addElement(recipeName);
        try{
            ps = con.prepareStatement("INSERT INTO Recipe VALUES (?, ?)");
            ps.setString(1, recipeName);
            ps.setString(2, recipeInfo);
            ps.executeUpdate();
            jTextArea1.setText(recipeInfo);
            con.commit();
            ps.close();
        }catch(SQLException e){
            System.out.println("SQLException caught. Message: " + e.getMessage());
            try{
                con.rollback();
            }catch(SQLException e2){
                System.out.println("Message: " + e2.getMessage());
                System.exit(-1);
            }
        }
    }
    private void createAddFrame(){
         AddFrame addFrame = new AddFrame(this);
         addFrame.setVisible(true);
        
    }
    private void createEditFrame(String key){
        EditFrame editFrame = new EditFrame(this, key);
        editFrame.setVisible(true);
    }
    
    private void search(String word){
        PreparedStatement ps;
        searchResultsField.setText("");
        try{
            ps = con.prepareStatement("SELECT * FROM (SELECT id FROM Recipe WHERE info LIKE ? UNION SELECT id FROM Recipe WHERE id LIKE ?)");
            word =  "%" + word;
            word = word + "%";
            ps.setString(1, word);
            ps.setString(2, word);
            ResultSet rs = ps.executeQuery();
            String results = "";
            while (rs.next()){
                String recipe = rs.getString("id");
                results = results + recipe + "\n";
            }
            searchResultsField.setText(results);
            if (searchResultsField.getText().equals("")){
                searchResultsField.setText("No results found.");
            }
           
            ps.close();
        }catch(SQLException e){
            System.out.println("Message: " + e.getMessage());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton1;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton EditButton;
    private javax.swing.JEditorPane jEditorPane2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JList<String> recipeList;
    private javax.swing.JTextField searchField;
    private javax.swing.JTextArea searchResultsField;
    // End of variables declaration//GEN-END:variables
}
